// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	account.proto
	user.proto

It has these top-level messages:
	Account
	User
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Account_Model struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	App       string `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Extra     string `protobuf:"bytes,5,opt,name=extra" json:"extra,omitempty"`
	Secret    string `protobuf:"bytes,6,opt,name=secret" json:"secret,omitempty"`
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt" json:"updatedAt,omitempty"`
	DeletedAt string `protobuf:"bytes,9,opt,name=deletedAt" json:"deletedAt,omitempty"`
	Status    int32  `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	Mobile    string `protobuf:"bytes,11,opt,name=mobile" json:"mobile,omitempty"`
}

func (m *Account_Model) Reset()                    { *m = Account_Model{} }
func (m *Account_Model) String() string            { return proto.CompactTextString(m) }
func (*Account_Model) ProtoMessage()               {}
func (*Account_Model) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Account_Model) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account_Model) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Account_Model) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Account_Model) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Account_Model) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *Account_Model) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Account_Model) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Account_Model) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Account_Model) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func (m *Account_Model) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Account_Model) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type Account_Out struct {
	Status string         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Data   *Account_Model `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Msg    string         `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *Account_Out) Reset()                    { *m = Account_Out{} }
func (m *Account_Out) String() string            { return proto.CompactTextString(m) }
func (*Account_Out) ProtoMessage()               {}
func (*Account_Out) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Account_Out) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Account_Out) GetData() *Account_Model {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Account_Out) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Account_Create struct {
}

func (m *Account_Create) Reset()                    { *m = Account_Create{} }
func (m *Account_Create) String() string            { return proto.CompactTextString(m) }
func (*Account_Create) ProtoMessage()               {}
func (*Account_Create) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

type Account_Create_In struct {
	Data *Account_Model `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Account_Create_In) Reset()                    { *m = Account_Create_In{} }
func (m *Account_Create_In) String() string            { return proto.CompactTextString(m) }
func (*Account_Create_In) ProtoMessage()               {}
func (*Account_Create_In) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2, 0} }

func (m *Account_Create_In) GetData() *Account_Model {
	if m != nil {
		return m.Data
	}
	return nil
}

type Account_GetByUserId struct {
}

func (m *Account_GetByUserId) Reset()                    { *m = Account_GetByUserId{} }
func (m *Account_GetByUserId) String() string            { return proto.CompactTextString(m) }
func (*Account_GetByUserId) ProtoMessage()               {}
func (*Account_GetByUserId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

type Account_GetByUserId_In struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *Account_GetByUserId_In) Reset()                    { *m = Account_GetByUserId_In{} }
func (m *Account_GetByUserId_In) String() string            { return proto.CompactTextString(m) }
func (*Account_GetByUserId_In) ProtoMessage()               {}
func (*Account_GetByUserId_In) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3, 0} }

func (m *Account_GetByUserId_In) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type Account_UpdateByUserId struct {
}

func (m *Account_UpdateByUserId) Reset()                    { *m = Account_UpdateByUserId{} }
func (m *Account_UpdateByUserId) String() string            { return proto.CompactTextString(m) }
func (*Account_UpdateByUserId) ProtoMessage()               {}
func (*Account_UpdateByUserId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

type Account_UpdateByUserId_In struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *Account_UpdateByUserId_In) Reset()                    { *m = Account_UpdateByUserId_In{} }
func (m *Account_UpdateByUserId_In) String() string            { return proto.CompactTextString(m) }
func (*Account_UpdateByUserId_In) ProtoMessage()               {}
func (*Account_UpdateByUserId_In) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4, 0} }

func (m *Account_UpdateByUserId_In) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "rpc.Account")
	proto.RegisterType((*Account_Model)(nil), "rpc.Account.Model")
	proto.RegisterType((*Account_Out)(nil), "rpc.Account.Out")
	proto.RegisterType((*Account_Create)(nil), "rpc.Account.Create")
	proto.RegisterType((*Account_Create_In)(nil), "rpc.Account.Create.In")
	proto.RegisterType((*Account_GetByUserId)(nil), "rpc.Account.GetByUserId")
	proto.RegisterType((*Account_GetByUserId_In)(nil), "rpc.Account.GetByUserId.In")
	proto.RegisterType((*Account_UpdateByUserId)(nil), "rpc.Account.UpdateByUserId")
	proto.RegisterType((*Account_UpdateByUserId_In)(nil), "rpc.Account.UpdateByUserId.In")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	Create(ctx context.Context, in *Account_Create_In, opts ...grpc.CallOption) (*Account_Out, error)
	GetByUserId(ctx context.Context, in *Account_GetByUserId_In, opts ...grpc.CallOption) (*Account_Out, error)
	UpdateByUserId(ctx context.Context, in *Account_UpdateByUserId_In, opts ...grpc.CallOption) (*Account_Out, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) Create(ctx context.Context, in *Account_Create_In, opts ...grpc.CallOption) (*Account_Out, error) {
	out := new(Account_Out)
	err := grpc.Invoke(ctx, "/rpc.AccountService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetByUserId(ctx context.Context, in *Account_GetByUserId_In, opts ...grpc.CallOption) (*Account_Out, error) {
	out := new(Account_Out)
	err := grpc.Invoke(ctx, "/rpc.AccountService/GetByUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateByUserId(ctx context.Context, in *Account_UpdateByUserId_In, opts ...grpc.CallOption) (*Account_Out, error) {
	out := new(Account_Out)
	err := grpc.Invoke(ctx, "/rpc.AccountService/UpdateByUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	Create(context.Context, *Account_Create_In) (*Account_Out, error)
	GetByUserId(context.Context, *Account_GetByUserId_In) (*Account_Out, error)
	UpdateByUserId(context.Context, *Account_UpdateByUserId_In) (*Account_Out, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account_Create_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AccountService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Create(ctx, req.(*Account_Create_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account_GetByUserId_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AccountService/GetByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetByUserId(ctx, req.(*Account_GetByUserId_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account_UpdateByUserId_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AccountService/UpdateByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateByUserId(ctx, req.(*Account_UpdateByUserId_In))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AccountService_Create_Handler,
		},
		{
			MethodName: "GetByUserId",
			Handler:    _AccountService_GetByUserId_Handler,
		},
		{
			MethodName: "UpdateByUserId",
			Handler:    _AccountService_UpdateByUserId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0xd9, 0xa4, 0x49, 0xff, 0x9d, 0xf2, 0x2f, 0x65, 0x91, 0xb2, 0xac, 0x45, 0x8a, 0x07,
	0x29, 0x28, 0x39, 0x54, 0xf0, 0xe4, 0xa5, 0xf5, 0x20, 0x3d, 0x88, 0x10, 0x29, 0x9e, 0xd3, 0xec,
	0x50, 0x42, 0x5f, 0x12, 0x36, 0x1b, 0xb1, 0x1f, 0xc0, 0x93, 0xdf, 0xcb, 0xcf, 0x25, 0xfb, 0xd2,
	0x97, 0x48, 0x11, 0x6f, 0x99, 0xdf, 0x33, 0x33, 0xfb, 0xe4, 0xd9, 0x85, 0xff, 0x49, 0x9a, 0xe6,
	0xd5, 0x46, 0x45, 0x85, 0xcc, 0x55, 0x4e, 0x7d, 0x59, 0xa4, 0x97, 0x1f, 0x0d, 0x68, 0x8e, 0x2d,
	0xe6, 0x9f, 0x1e, 0x04, 0x4f, 0xb9, 0xc0, 0x15, 0xed, 0x80, 0x97, 0x09, 0x46, 0x06, 0x64, 0xe8,
	0xc7, 0x5e, 0x26, 0x68, 0x0f, 0xc2, 0xaa, 0x44, 0x39, 0x15, 0xcc, 0x33, 0xcc, 0x55, 0xb4, 0x0b,
	0x7e, 0x52, 0x14, 0xcc, 0x1f, 0x90, 0x61, 0x2b, 0xd6, 0x9f, 0x9a, 0x2c, 0x71, 0xcb, 0x1a, 0x96,
	0x2c, 0x71, 0x4b, 0xcf, 0x20, 0xc0, 0x77, 0x25, 0x13, 0x16, 0x18, 0x66, 0x0b, 0xbd, 0xb1, 0xc4,
	0x54, 0xa2, 0x62, 0xa1, 0xc1, 0xae, 0xa2, 0x7d, 0x68, 0xa5, 0x12, 0x13, 0x85, 0x62, 0xac, 0x58,
	0xd3, 0x48, 0x07, 0xa0, 0xd5, 0xaa, 0x10, 0x4e, 0xfd, 0x67, 0xd5, 0x3d, 0xd0, 0xaa, 0xc0, 0x15,
	0x5a, 0xb5, 0x65, 0xd5, 0x3d, 0x30, 0x27, 0xaa, 0x44, 0x55, 0x25, 0x83, 0x01, 0x19, 0x06, 0xb1,
	0xab, 0x34, 0x5f, 0xe7, 0xf3, 0x6c, 0x85, 0xac, 0x6d, 0x9d, 0xd8, 0x8a, 0xbf, 0x82, 0xff, 0x5c,
	0x1d, 0x8f, 0x11, 0x67, 0xd4, 0x8e, 0x5d, 0x41, 0x43, 0x24, 0x2a, 0x31, 0x81, 0xb4, 0x47, 0x34,
	0x92, 0x45, 0x1a, 0xb9, 0x20, 0x23, 0x13, 0x62, 0x6c, 0x74, 0x1d, 0xc8, 0xba, 0x5c, 0xec, 0x22,
	0x5a, 0x97, 0x0b, 0x7e, 0x07, 0xe1, 0x83, 0xf9, 0x23, 0x7e, 0x03, 0xde, 0x74, 0xb3, 0xdf, 0x44,
	0x7e, 0xdf, 0xc4, 0xaf, 0xa1, 0xfd, 0x88, 0x6a, 0xb2, 0x9d, 0x99, 0xec, 0x79, 0xdf, 0x0c, 0x1f,
	0x6e, 0x86, 0x1c, 0xdf, 0x0c, 0x8f, 0xa0, 0x33, 0x33, 0xc1, 0xfc, 0xad, 0x7f, 0xf4, 0x45, 0xa0,
	0xe3, 0x0e, 0x7d, 0x41, 0xf9, 0x96, 0xa5, 0x48, 0x47, 0x3b, 0x9f, 0xb4, 0x57, 0xf3, 0x64, 0x61,
	0x34, 0xdd, 0xf0, 0x6e, 0x8d, 0xeb, 0xb4, 0xee, 0x6b, 0x1e, 0xe9, 0x79, 0xad, 0xe1, 0x48, 0x39,
	0x3d, 0x3d, 0xf9, 0x69, 0x9a, 0x5e, 0xd4, 0x7a, 0xea, 0xe2, 0xc9, 0x1d, 0xf3, 0xd0, 0x3c, 0xee,
	0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa2, 0x7d, 0x69, 0xed, 0x02, 0x00, 0x00,
}
