// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type User_Model struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NickName  string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	AvatorUrl string `protobuf:"bytes,3,opt,name=avatorUrl" json:"avatorUrl,omitempty"`
	Mobile    string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Gender    int32  `protobuf:"varint,5,opt,name=gender" json:"gender,omitempty"`
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt" json:"updatedAt,omitempty"`
	DeletedAt string `protobuf:"bytes,8,opt,name=deletedAt" json:"deletedAt,omitempty"`
	Status    int32  `protobuf:"varint,9,opt,name=status" json:"status,omitempty"`
}

func (m *User_Model) Reset()                    { *m = User_Model{} }
func (m *User_Model) String() string            { return proto.CompactTextString(m) }
func (*User_Model) ProtoMessage()               {}
func (*User_Model) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *User_Model) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User_Model) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *User_Model) GetAvatorUrl() string {
	if m != nil {
		return m.AvatorUrl
	}
	return ""
}

func (m *User_Model) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User_Model) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *User_Model) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User_Model) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *User_Model) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func (m *User_Model) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type User_Out struct {
	Status string      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Data   *User_Model `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Msg    string      `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *User_Out) Reset()                    { *m = User_Out{} }
func (m *User_Out) String() string            { return proto.CompactTextString(m) }
func (*User_Out) ProtoMessage()               {}
func (*User_Out) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

func (m *User_Out) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *User_Out) GetData() *User_Model {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *User_Out) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type User_ListData struct {
	Total int64         `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	List  []*User_Model `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *User_ListData) Reset()                    { *m = User_ListData{} }
func (m *User_ListData) String() string            { return proto.CompactTextString(m) }
func (*User_ListData) ProtoMessage()               {}
func (*User_ListData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

func (m *User_ListData) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *User_ListData) GetList() []*User_Model {
	if m != nil {
		return m.List
	}
	return nil
}

type User_Create struct {
}

func (m *User_Create) Reset()                    { *m = User_Create{} }
func (m *User_Create) String() string            { return proto.CompactTextString(m) }
func (*User_Create) ProtoMessage()               {}
func (*User_Create) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 3} }

type User_Create_In struct {
	User    *User_Model    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account *Account_Model `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *User_Create_In) Reset()                    { *m = User_Create_In{} }
func (m *User_Create_In) String() string            { return proto.CompactTextString(m) }
func (*User_Create_In) ProtoMessage()               {}
func (*User_Create_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 3, 0} }

func (m *User_Create_In) GetUser() *User_Model {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *User_Create_In) GetAccount() *Account_Model {
	if m != nil {
		return m.Account
	}
	return nil
}

type User_GetById struct {
}

func (m *User_GetById) Reset()                    { *m = User_GetById{} }
func (m *User_GetById) String() string            { return proto.CompactTextString(m) }
func (*User_GetById) ProtoMessage()               {}
func (*User_GetById) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 4} }

type User_GetById_In struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *User_GetById_In) Reset()                    { *m = User_GetById_In{} }
func (m *User_GetById_In) String() string            { return proto.CompactTextString(m) }
func (*User_GetById_In) ProtoMessage()               {}
func (*User_GetById_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 4, 0} }

func (m *User_GetById_In) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User_GetByMobile struct {
}

func (m *User_GetByMobile) Reset()                    { *m = User_GetByMobile{} }
func (m *User_GetByMobile) String() string            { return proto.CompactTextString(m) }
func (*User_GetByMobile) ProtoMessage()               {}
func (*User_GetByMobile) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 5} }

type User_GetByMobile_In struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
}

func (m *User_GetByMobile_In) Reset()                    { *m = User_GetByMobile_In{} }
func (m *User_GetByMobile_In) String() string            { return proto.CompactTextString(m) }
func (*User_GetByMobile_In) ProtoMessage()               {}
func (*User_GetByMobile_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 5, 0} }

func (m *User_GetByMobile_In) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type User_DeleteById struct {
}

func (m *User_DeleteById) Reset()                    { *m = User_DeleteById{} }
func (m *User_DeleteById) String() string            { return proto.CompactTextString(m) }
func (*User_DeleteById) ProtoMessage()               {}
func (*User_DeleteById) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 6} }

type User_DeleteById_In struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *User_DeleteById_In) Reset()                    { *m = User_DeleteById_In{} }
func (m *User_DeleteById_In) String() string            { return proto.CompactTextString(m) }
func (*User_DeleteById_In) ProtoMessage()               {}
func (*User_DeleteById_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 6, 0} }

func (m *User_DeleteById_In) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User_DeleteByMobile struct {
}

func (m *User_DeleteByMobile) Reset()                    { *m = User_DeleteByMobile{} }
func (m *User_DeleteByMobile) String() string            { return proto.CompactTextString(m) }
func (*User_DeleteByMobile) ProtoMessage()               {}
func (*User_DeleteByMobile) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 7} }

type User_DeleteByMobile_In struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
}

func (m *User_DeleteByMobile_In) Reset()                    { *m = User_DeleteByMobile_In{} }
func (m *User_DeleteByMobile_In) String() string            { return proto.CompactTextString(m) }
func (*User_DeleteByMobile_In) ProtoMessage()               {}
func (*User_DeleteByMobile_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 7, 0} }

func (m *User_DeleteByMobile_In) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type User_RemoveById struct {
}

func (m *User_RemoveById) Reset()                    { *m = User_RemoveById{} }
func (m *User_RemoveById) String() string            { return proto.CompactTextString(m) }
func (*User_RemoveById) ProtoMessage()               {}
func (*User_RemoveById) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 8} }

type User_RemoveById_In struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *User_RemoveById_In) Reset()                    { *m = User_RemoveById_In{} }
func (m *User_RemoveById_In) String() string            { return proto.CompactTextString(m) }
func (*User_RemoveById_In) ProtoMessage()               {}
func (*User_RemoveById_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 8, 0} }

func (m *User_RemoveById_In) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User_RemoveByMobile struct {
}

func (m *User_RemoveByMobile) Reset()                    { *m = User_RemoveByMobile{} }
func (m *User_RemoveByMobile) String() string            { return proto.CompactTextString(m) }
func (*User_RemoveByMobile) ProtoMessage()               {}
func (*User_RemoveByMobile) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 9} }

type User_RemoveByMobile_In struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
}

func (m *User_RemoveByMobile_In) Reset()                    { *m = User_RemoveByMobile_In{} }
func (m *User_RemoveByMobile_In) String() string            { return proto.CompactTextString(m) }
func (*User_RemoveByMobile_In) ProtoMessage()               {}
func (*User_RemoveByMobile_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 9, 0} }

func (m *User_RemoveByMobile_In) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type User_UpdateById struct {
}

func (m *User_UpdateById) Reset()                    { *m = User_UpdateById{} }
func (m *User_UpdateById) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateById) ProtoMessage()               {}
func (*User_UpdateById) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 10} }

type User_UpdateById_In struct {
	Data *User_Model `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *User_UpdateById_In) Reset()                    { *m = User_UpdateById_In{} }
func (m *User_UpdateById_In) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateById_In) ProtoMessage()               {}
func (*User_UpdateById_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 10, 0} }

func (m *User_UpdateById_In) GetData() *User_Model {
	if m != nil {
		return m.Data
	}
	return nil
}

type User_UpdateByMobile struct {
}

func (m *User_UpdateByMobile) Reset()                    { *m = User_UpdateByMobile{} }
func (m *User_UpdateByMobile) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateByMobile) ProtoMessage()               {}
func (*User_UpdateByMobile) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 11} }

type User_UpdateByMobile_In struct {
	Data *User_Model `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *User_UpdateByMobile_In) Reset()                    { *m = User_UpdateByMobile_In{} }
func (m *User_UpdateByMobile_In) String() string            { return proto.CompactTextString(m) }
func (*User_UpdateByMobile_In) ProtoMessage()               {}
func (*User_UpdateByMobile_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 11, 0} }

func (m *User_UpdateByMobile_In) GetData() *User_Model {
	if m != nil {
		return m.Data
	}
	return nil
}

type User_GetList struct {
}

func (m *User_GetList) Reset()                    { *m = User_GetList{} }
func (m *User_GetList) String() string            { return proto.CompactTextString(m) }
func (*User_GetList) ProtoMessage()               {}
func (*User_GetList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 12} }

type User_GetList_In struct {
	Limit  int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *User_GetList_In) Reset()                    { *m = User_GetList_In{} }
func (m *User_GetList_In) String() string            { return proto.CompactTextString(m) }
func (*User_GetList_In) ProtoMessage()               {}
func (*User_GetList_In) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 12, 0} }

func (m *User_GetList_In) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *User_GetList_In) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type User_GetList_Out struct {
	Status int64          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Msg    string         `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data   *User_ListData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *User_GetList_Out) Reset()                    { *m = User_GetList_Out{} }
func (m *User_GetList_Out) String() string            { return proto.CompactTextString(m) }
func (*User_GetList_Out) ProtoMessage()               {}
func (*User_GetList_Out) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 12, 1} }

func (m *User_GetList_Out) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *User_GetList_Out) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *User_GetList_Out) GetData() *User_ListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "rpc.User")
	proto.RegisterType((*User_Model)(nil), "rpc.User.Model")
	proto.RegisterType((*User_Out)(nil), "rpc.User.Out")
	proto.RegisterType((*User_ListData)(nil), "rpc.User.ListData")
	proto.RegisterType((*User_Create)(nil), "rpc.User.Create")
	proto.RegisterType((*User_Create_In)(nil), "rpc.User.Create.In")
	proto.RegisterType((*User_GetById)(nil), "rpc.User.GetById")
	proto.RegisterType((*User_GetById_In)(nil), "rpc.User.GetById.In")
	proto.RegisterType((*User_GetByMobile)(nil), "rpc.User.GetByMobile")
	proto.RegisterType((*User_GetByMobile_In)(nil), "rpc.User.GetByMobile.In")
	proto.RegisterType((*User_DeleteById)(nil), "rpc.User.DeleteById")
	proto.RegisterType((*User_DeleteById_In)(nil), "rpc.User.DeleteById.In")
	proto.RegisterType((*User_DeleteByMobile)(nil), "rpc.User.DeleteByMobile")
	proto.RegisterType((*User_DeleteByMobile_In)(nil), "rpc.User.DeleteByMobile.In")
	proto.RegisterType((*User_RemoveById)(nil), "rpc.User.RemoveById")
	proto.RegisterType((*User_RemoveById_In)(nil), "rpc.User.RemoveById.In")
	proto.RegisterType((*User_RemoveByMobile)(nil), "rpc.User.RemoveByMobile")
	proto.RegisterType((*User_RemoveByMobile_In)(nil), "rpc.User.RemoveByMobile.In")
	proto.RegisterType((*User_UpdateById)(nil), "rpc.User.UpdateById")
	proto.RegisterType((*User_UpdateById_In)(nil), "rpc.User.UpdateById.In")
	proto.RegisterType((*User_UpdateByMobile)(nil), "rpc.User.UpdateByMobile")
	proto.RegisterType((*User_UpdateByMobile_In)(nil), "rpc.User.UpdateByMobile.In")
	proto.RegisterType((*User_GetList)(nil), "rpc.User.GetList")
	proto.RegisterType((*User_GetList_In)(nil), "rpc.User.GetList.In")
	proto.RegisterType((*User_GetList_Out)(nil), "rpc.User.GetList.Out")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	GetById(ctx context.Context, in *User_GetById_In, opts ...grpc.CallOption) (*User_Out, error)
	GetByMobile(ctx context.Context, in *User_GetByMobile_In, opts ...grpc.CallOption) (*User_Out, error)
	UpdateById(ctx context.Context, in *User_UpdateById_In, opts ...grpc.CallOption) (*User_Out, error)
	UpdateByMobile(ctx context.Context, in *User_UpdateByMobile_In, opts ...grpc.CallOption) (*User_Out, error)
	GetList(ctx context.Context, in *User_GetList_In, opts ...grpc.CallOption) (*User_GetList_Out, error)
	Create(ctx context.Context, in *User_Create_In, opts ...grpc.CallOption) (*User_Out, error)
	DeleteById(ctx context.Context, in *User_DeleteById_In, opts ...grpc.CallOption) (*User_Out, error)
	DeleteByMobile(ctx context.Context, in *User_DeleteByMobile_In, opts ...grpc.CallOption) (*User_Out, error)
	RemoveById(ctx context.Context, in *User_RemoveById_In, opts ...grpc.CallOption) (*User_Out, error)
	RemoveByMobile(ctx context.Context, in *User_RemoveByMobile_In, opts ...grpc.CallOption) (*User_Out, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetById(ctx context.Context, in *User_GetById_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/GetById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByMobile(ctx context.Context, in *User_GetByMobile_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/GetByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateById(ctx context.Context, in *User_UpdateById_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/UpdateById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateByMobile(ctx context.Context, in *User_UpdateByMobile_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/UpdateByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetList(ctx context.Context, in *User_GetList_In, opts ...grpc.CallOption) (*User_GetList_Out, error) {
	out := new(User_GetList_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/GetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *User_Create_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteById(ctx context.Context, in *User_DeleteById_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/DeleteById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteByMobile(ctx context.Context, in *User_DeleteByMobile_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/DeleteByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RemoveById(ctx context.Context, in *User_RemoveById_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/RemoveById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RemoveByMobile(ctx context.Context, in *User_RemoveByMobile_In, opts ...grpc.CallOption) (*User_Out, error) {
	out := new(User_Out)
	err := grpc.Invoke(ctx, "/rpc.UserService/RemoveByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetById(context.Context, *User_GetById_In) (*User_Out, error)
	GetByMobile(context.Context, *User_GetByMobile_In) (*User_Out, error)
	UpdateById(context.Context, *User_UpdateById_In) (*User_Out, error)
	UpdateByMobile(context.Context, *User_UpdateByMobile_In) (*User_Out, error)
	GetList(context.Context, *User_GetList_In) (*User_GetList_Out, error)
	Create(context.Context, *User_Create_In) (*User_Out, error)
	DeleteById(context.Context, *User_DeleteById_In) (*User_Out, error)
	DeleteByMobile(context.Context, *User_DeleteByMobile_In) (*User_Out, error)
	RemoveById(context.Context, *User_RemoveById_In) (*User_Out, error)
	RemoveByMobile(context.Context, *User_RemoveByMobile_In) (*User_Out, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_GetById_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetById(ctx, req.(*User_GetById_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_GetByMobile_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/GetByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByMobile(ctx, req.(*User_GetByMobile_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_UpdateById_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/UpdateById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateById(ctx, req.(*User_UpdateById_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_UpdateByMobile_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/UpdateByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateByMobile(ctx, req.(*User_UpdateByMobile_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_GetList_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetList(ctx, req.(*User_GetList_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_Create_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*User_Create_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_DeleteById_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/DeleteById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteById(ctx, req.(*User_DeleteById_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_DeleteByMobile_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/DeleteByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteByMobile(ctx, req.(*User_DeleteByMobile_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RemoveById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_RemoveById_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RemoveById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/RemoveById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RemoveById(ctx, req.(*User_RemoveById_In))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RemoveByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_RemoveByMobile_In)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RemoveByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/RemoveByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RemoveByMobile(ctx, req.(*User_RemoveByMobile_In))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetById",
			Handler:    _UserService_GetById_Handler,
		},
		{
			MethodName: "GetByMobile",
			Handler:    _UserService_GetByMobile_Handler,
		},
		{
			MethodName: "UpdateById",
			Handler:    _UserService_UpdateById_Handler,
		},
		{
			MethodName: "UpdateByMobile",
			Handler:    _UserService_UpdateByMobile_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _UserService_GetList_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "DeleteById",
			Handler:    _UserService_DeleteById_Handler,
		},
		{
			MethodName: "DeleteByMobile",
			Handler:    _UserService_DeleteByMobile_Handler,
		},
		{
			MethodName: "RemoveById",
			Handler:    _UserService_RemoveById_Handler,
		},
		{
			MethodName: "RemoveByMobile",
			Handler:    _UserService_RemoveByMobile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x26, 0x49, 0xd3, 0x9f, 0x53, 0xb6, 0xca, 0x58, 0x35, 0x8c, 0x0b, 0x96, 0x15, 0xa4, 0xe2,
	0x92, 0x8b, 0x2a, 0xeb, 0x85, 0xde, 0xac, 0xae, 0x48, 0xc1, 0x55, 0x88, 0x96, 0xbd, 0xce, 0x26,
	0xb3, 0x4b, 0x30, 0x6d, 0x4a, 0x32, 0x2d, 0x78, 0xe9, 0x4b, 0xf8, 0x2a, 0x3e, 0x98, 0x2f, 0x20,
	0xe7, 0xcc, 0x24, 0x93, 0xb4, 0x71, 0x5d, 0xef, 0x7a, 0xbe, 0xef, 0x7c, 0xe7, 0x67, 0xbe, 0x13,
	0x0a, 0xb0, 0x29, 0x44, 0xee, 0xaf, 0xf3, 0x4c, 0x66, 0xcc, 0xc9, 0xd7, 0x11, 0x3f, 0x08, 0xa3,
	0x28, 0xdb, 0xac, 0xa4, 0xc2, 0x8e, 0x7e, 0xf4, 0xa1, 0xb3, 0x28, 0x44, 0xce, 0x7f, 0x5b, 0xe0,
	0x9e, 0x67, 0xb1, 0x48, 0xd9, 0x08, 0xec, 0x24, 0xf6, 0xac, 0x89, 0x35, 0x75, 0x02, 0x3b, 0x89,
	0x19, 0x87, 0xfe, 0x2a, 0x89, 0xbe, 0x7d, 0x0a, 0x97, 0xc2, 0xb3, 0x27, 0xd6, 0x74, 0x10, 0x54,
	0x31, 0x3b, 0x84, 0x41, 0xb8, 0x0d, 0x65, 0x96, 0x2f, 0xf2, 0xd4, 0x73, 0x88, 0x34, 0x00, 0x7b,
	0x00, 0xdd, 0x65, 0x76, 0x99, 0xa4, 0xc2, 0xeb, 0x10, 0xa5, 0x23, 0xc4, 0xaf, 0xc5, 0x2a, 0x16,
	0xb9, 0xe7, 0x4e, 0xac, 0xa9, 0x1b, 0xe8, 0x08, 0xab, 0x45, 0xb9, 0x08, 0xa5, 0x88, 0x4f, 0xa5,
	0xd7, 0x55, 0xd5, 0x2a, 0x00, 0xd9, 0xcd, 0x3a, 0xd6, 0x6c, 0x4f, 0xb1, 0x15, 0x80, 0x6c, 0x2c,
	0x52, 0xa1, 0xd8, 0xbe, 0x62, 0x2b, 0x00, 0x3b, 0x16, 0x32, 0x94, 0x9b, 0xc2, 0x1b, 0xa8, 0x8e,
	0x2a, 0xe2, 0x5f, 0xc1, 0xf9, 0xbc, 0xa9, 0xd3, 0x96, 0x1a, 0x54, 0x45, 0xec, 0x09, 0x74, 0xe2,
	0x50, 0x86, 0xb4, 0xf6, 0x70, 0x76, 0xc7, 0xcf, 0xd7, 0x91, 0x8f, 0xaf, 0xe5, 0xd3, 0x4b, 0x05,
	0x44, 0xb2, 0xbb, 0xe0, 0x2c, 0x8b, 0x6b, 0xbd, 0x3d, 0xfe, 0xe4, 0xef, 0xa1, 0xff, 0x31, 0x29,
	0xe4, 0x19, 0xb2, 0x63, 0x70, 0x65, 0x26, 0xc3, 0x54, 0x3f, 0xa8, 0x0a, 0xb0, 0x70, 0x9a, 0x14,
	0xd2, 0xb3, 0x27, 0x4e, 0x6b, 0x61, 0x24, 0x79, 0x08, 0xdd, 0x77, 0xb4, 0x3d, 0xbf, 0x00, 0x7b,
	0xbe, 0x42, 0x11, 0xba, 0x49, 0x95, 0xda, 0x44, 0x48, 0xb2, 0x63, 0xe8, 0x69, 0x87, 0xf5, 0xd4,
	0x8c, 0xf2, 0x4e, 0xb5, 0xeb, 0x2a, 0xb5, 0x4c, 0xe1, 0x8f, 0xa1, 0xf7, 0x41, 0xc8, 0xb7, 0xdf,
	0xe7, 0x31, 0x1f, 0x53, 0x8f, 0x1d, 0xf3, 0xf9, 0x73, 0x18, 0x52, 0xc2, 0x39, 0x39, 0xc7, 0x0f,
	0x29, 0xc9, 0xf8, 0x6a, 0xd5, 0x7d, 0xe5, 0x47, 0x00, 0x67, 0xf4, 0xe4, 0x37, 0x14, 0xf4, 0x61,
	0x54, 0xe6, 0xdc, 0xb6, 0x66, 0x20, 0x96, 0xd9, 0xf6, 0x1f, 0x35, 0xcb, 0x9c, 0x5b, 0xd5, 0x7c,
	0x05, 0xb0, 0xa0, 0xc3, 0xa1, 0x9a, 0xcf, 0xca, 0xc7, 0x25, 0xab, 0xad, 0x1b, 0xac, 0xe6, 0xaf,
	0x61, 0x54, 0x0a, 0x75, 0xa3, 0xff, 0x10, 0xff, 0xb4, 0xe8, 0xb1, 0xf1, 0x32, 0xf8, 0x8c, 0x64,
	0x63, 0x70, 0xd3, 0x64, 0x99, 0x48, 0xd2, 0xb9, 0x81, 0x0a, 0x70, 0xea, 0xec, 0xea, 0xaa, 0x10,
	0xca, 0x40, 0x37, 0xd0, 0x11, 0xbf, 0x68, 0xbb, 0x55, 0xa7, 0xba, 0x55, 0x7d, 0x86, 0x76, 0x75,
	0x86, 0xec, 0xa9, 0x9e, 0xca, 0xa9, 0xdd, 0x01, 0x4d, 0x55, 0x1e, 0xa7, 0x1a, 0x6c, 0xf6, 0xab,
	0x03, 0x43, 0xc4, 0xbf, 0x88, 0x7c, 0x9b, 0x44, 0x82, 0xf9, 0xd5, 0x51, 0xb0, 0xb1, 0x11, 0x69,
	0xc8, 0x9f, 0xaf, 0xf8, 0x81, 0x41, 0x71, 0xa2, 0x93, 0xc6, 0x8d, 0x30, 0x6f, 0x47, 0xa3, 0xe0,
	0x16, 0xdd, 0xcb, 0xba, 0x0d, 0xec, 0xa1, 0x21, 0x0d, 0xda, 0xa2, 0x7a, 0xb3, 0xeb, 0x01, 0x7b,
	0xb4, 0xaf, 0xfc, 0x6b, 0xcf, 0x93, 0xca, 0x83, 0x9d, 0xdd, 0x10, 0xc2, 0xfc, 0xfb, 0xfb, 0x28,
	0xea, 0x8e, 0xcb, 0x6f, 0x91, 0xdd, 0x33, 0x09, 0x0a, 0x69, 0xdf, 0xcc, 0x7c, 0x08, 0xf5, 0xcd,
	0x0c, 0xda, 0xbe, 0x59, 0xf3, 0xd3, 0xa8, 0x6f, 0xd6, 0x64, 0xda, 0x7b, 0x9a, 0x0f, 0xa5, 0xde,
	0xd3, 0xa0, 0xed, 0x3d, 0x9b, 0x9f, 0x4e, 0xbd, 0x67, 0x93, 0xd9, 0x57, 0x5f, 0x76, 0xe9, 0x4f,
	0xe4, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xff, 0xbe, 0x0f, 0x66, 0x06, 0x00, 0x00,
}
